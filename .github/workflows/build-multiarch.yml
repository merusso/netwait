# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build-multiarch

on:
  push:
    branches: [ "reuse-build-multiarch" ]
  workflow_call:
  workflow_dispatch:

jobs:

  build-binary:
    name: Build binaries
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Docker Metadata action
      id: meta
      uses: docker/metadata-action@v4.1.1
      with:
        images: fake

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

      # See: https://github.com/magnetikonline/action-golang-cache
    - name: Setup Golang caches
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-

    - name: Install Gox
      run: go install github.com/mitchellh/gox@latest

    - name: Build multi-arch
      run: >
        gox -osarch='linux/amd64 darwin/amd64 windows/amd64'

#    - name: Build multi-arch
#      uses: thatisuday/go-cross-build@v1.1.0
#      with:
#        platforms: linux/amd64,darwin/amd64,windows/amd64
#        name: netwait
#        ldflags: "-X 'github.com/merusso/netwait/cmd.version=${{ steps.meta.outputs.version }}'"

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: netwait
        path: build/
